import os
import sys
from supabase import create_client, Client
from dotenv import load_dotenv

load_dotenv('.env.local')

def deploy_sql_function():
    supabase_url = os.getenv('NEXT_PUBLIC_SUPABASE_URL')
    supabase_key = os.getenv('SUPABASE_SERVICE_ROLE_KEY')

    if not all([supabase_url, supabase_key]):
        print("Error: Missing required environment variables")
        print("Required: NEXT_PUBLIC_SUPABASE_URL, SUPABASE_SERVICE_ROLE_KEY")
        sys.exit(1)

    supabase: Client = create_client(supabase_url, supabase_key)

    sql_file_path = 'create-sql-function.sql'
    if not os.path.exists(sql_file_path):
        print(f"Error: {sql_file_path} file not found")
        sys.exit(1)

    with open(sql_file_path, 'r') as f:
        sql_content = f.read()
    
    print("üöÄ Deploying SQL execution function...")
    
    try:
        # Execute the SQL to create the function
        response = supabase.rpc('exec_sql', {'sql': sql_content})
        
        print("‚úÖ Successfully deployed SQL execution function!")
        print("Function created: run_query(sql text)")
        print("This allows execution of SQL statements generated by the LLM")
            
    except Exception as e:
        print(f"‚ùå Error deploying function: {e}")
        print("This might be expected if the function already exists")
        print("Continuing with testing...")

if __name__ == "__main__":
    deploy_sql_function()
